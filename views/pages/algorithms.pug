h3.title What is an Algorithm?
p An algorithm is that it contains the finite set of instructions which are being carried in a specific order to perform the specific task

h4.subtitle Characteristics of an Algorithm
p.item 
    strong Input:
    | An algorithm has some input values. We can pass 0 or some input value to an algorithm.
p.item 
    strong Output:
    | We will get 1 or more output at the end of an algorithm.
p.item 
    strong Unambiguity:
    | An algorithm should be unambiguous which means that the instructions in an algorithm should be clear and simple.
p.item 
    strong Finiteness:
    | An algorithm should have finiteness. Here, finiteness means that the algorithm should contain a limited number of instructions, i.e., the instructions should be countable.
p.item 
    strong Effectiveness:
    | An algorithm should be effective as each instruction in an algorithm affects the overall process.
p.item 
    strong Language Independence:
    | An algorithm must be language-independent so that the instructions in an algorithm can be implemented in any of the languages with the same output.

h3.subtitle Why do we need Algorithms?
p.item 
    strong Scalability:
    | It helps us to understand the scalability. When we have a big real-world problem, we need to scale it down into small-small steps to easily analyze the problem.
p.item 
    strong Performance:
    |  The real-world is not easily broken down into smaller steps. If the problem can be easily broken into smaller steps means that the problem is feasible